// Вывести названия двух произвольных треков с тегом mega
db.tracks.find({tags: "mega"}).limit(2).forEach(function(doc) { print(doc.title) });

// Вывести имя юзера с самым минимальным балансом
db.users.find().sort({balance: 1}).limit(1).forEach(function(doc) { print(doc.username) });

// Используя метод countDocuments(), вывести ко-во заблокированных юзеров с балансом от 10 до 1000 EUR (вкл.)
print(db.users.countDocuments({balance: {$gte: 10, $lte: 1000}, status: "blocked"}));

// Используя метод aggregate(), вывести ко-во незаблокированных юзеров не из Germany и не из France с балансом до 1000 EUR (не вкл.)
print(db.users.aggregate([
    {$match: {balance: {$lt: 1000}, status: "active", country: {$nin: ["Germany", "France"]}}},
    {$count: "count"}
]).next().count);



Код, созданный ИИ. Внимательно просмотрите и используйте. Дополнительные сведения о часто задаваемых вопросах.
Агрегация в MongoDB работает путем обработки данных и возврата вычисленного результата. Она использует конвейер агрегации, 
где каждый этап трансформирует документы, проходящие через него. Этапы включают фильтрацию, группировку, сортировку, ограничение и другие операции. 
Это мощный инструмент для сложных запросов и анализа данных.
